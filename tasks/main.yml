---
# tasks file for oss-docker-install

- name: Fail if OS distro is not Ubuntu 14.04
  fail:
      msg="The role is designed only for Ubuntu 14.04"
  when: "{{ ansible_distribution_version | version_compare('14.04', '!=') }}"

# The docker_container and docker_image module in Ansible
# requires docker-py library to be installed on the remote server,
# so at first we use python-pip to install docker-py library on all servers before installing the Docker:

# see: https://github.com/ansible/ansible-modules-core/issues/2951

- name: Update apt cache using apt module
  apt: update_cache=yes cache_valid_time=7200
  delay: 1
  ignore_errors: yes
  register: apt_result
  retries: 3
  sudo: yes
  until: apt_result|success

- name: Clean apt cache when apt module failed
  shell: rm -vrf /var/lib/apt/lists/*; apt-get clean
  sudo: yes
  when: apt_result|failed

- name: Retry if needed using command apt-get update
  command: apt-get update
  ignore_errors: yes
  sudo: yes
  when: apt_result|failed

- name: Install dependencies
  apt:
      name={{ item }}
      #update_cache=yes
  with_items:
      - aria2
      - python-dev
      - python-setuptools

- name: Install pip
  easy_install:
      name=pip

- name: Install docker-py
  pip:
      state=present
      name=docker
      version=2.4.2
      #name=docker-py
      #version=1.10.6

# Import the Docker apt repo and install Docker:
- name: Add docker apt repo
  apt_repository:
      repo='deb https://apt.dockerproject.org/repo ubuntu-{{ ansible_distribution_release }} main'
      state=present

- name: Import the Docker repository key
  apt_key:
      url=https://apt.dockerproject.org/gpg
      state=present
      id=2C52609D

- name: Test docker-engine installed
  shell: dpkg-query -W 'docker-engine' | grep 1.12.6-0~ubuntu-trusty
  ignore_errors: yes
  register: is_docker_engine

- name: Clean apt cache for docker repository
  shell: rm -vrf /var/lib/apt/lists/*; apt-get clean
  sudo: yes
  when: is_docker_engine|failed

- name: Update apt cache for docker repository
  ignore_errors: yes
  shell: apt-get update
  sudo: yes
  when: is_docker_engine|failed

- name: Install Docker package
  apt:
      name=docker-engine=1.12.6-0~ubuntu-trusty
      #update_cache=yes

- stat:
    path: /usr/local/sbin/docker-machine
  register: usr_local_sbin_docker_machine

- debug: msg="{{ ansible_hostname }} usr_local_sbin_docker_machine.stat.md5 {{ usr_local_sbin_docker_machine.stat.md5 }}"
  when: usr_local_sbin_docker_machine.stat.exists

- set_fact:
    docker_machine_miss_match: "{{ usr_local_sbin_docker_machine.stat.md5 != 'cb7b98ebd5677f30cc527e4dcbd618b1' }}"
  when: usr_local_sbin_docker_machine.stat.exists

- name: Download docker-machine
  when: install_docker_machine and ( not usr_local_sbin_docker_machine.stat.exists or docker_machine_miss_match )
  shell: aria2c --file-allocation=none -c -x 10 -s 10 -m 0 --console-log-level=notice --log-level=notice --summary-interval=0 -d /usr/local/sbin -o docker-machine https://github.com/docker/machine/releases/download/v0.12.0/docker-machine-Linux-x86_64
#  get_url:
#    checksum: sha256:C4568BB0B0F5A48B57D9D034A441F445004C81B69C2F571AEFCA46862400EAAF
#    url: https://github.com/docker/machine/releases/download/v0.12.0/docker-machine-Linux-x86_64
#    dest: /usr/local/sbin/docker-machine
#    mode: 0755
#    timeout: 30

- stat:
    path: /usr/local/sbin/docker-compose
  register: usr_local_sbin_docker_compose

- debug: msg="{{ ansible_hostname }} usr_local_sbin_docker_compose.stat.md5 {{ usr_local_sbin_docker_compose.stat.md5 }}"
  when: usr_local_sbin_docker_compose.stat.exists

- set_fact:
    docker_compose_miss_match: "{{ usr_local_sbin_docker_compose.stat.md5 != '13196d9b1c3f3be0964b7536c39348b5' }}"
  when: usr_local_sbin_docker_compose.stat.exists

- name: Download docker-compose
  when: install_docker_compose and ( not usr_local_sbin_docker_compose.stat.exists or docker_compose_miss_match )
  shell: aria2c --file-allocation=none -c -x 10 -s 10 -m 0 --console-log-level=notice --log-level=notice --summary-interval=0 -d /usr/local/sbin -o docker-compose https://github.com//docker/compose/releases/download/1.13.0/docker-compose-Linux-x86_64
#  get_url:
#    checksum: sha256:0D8AF4D3336B0B41361C06FF213BE5C42E2247BEB746DBC597803E862AF127E8
#    url: https://github.com//docker/compose/releases/download/1.13.0/docker-compose-Linux-x86_64
#    dest: /usr/local/sbin/docker-compose
#    mode: 0755
#    timeout: 30

- name: Install pip docker-compose
  pip:
      state=present
      name=docker-compose
      version=1.13.0

# Create a system group for Docker
# and add any user defined in “docker_users” variable to this group,
# and it will copy template for Docker configuration then restart Docker.
- name: Create a docker group
  group:
      name=docker
      state=present

- name: Add user(s) to docker group
  user:
      name={{ item }}
      group=docker
      state=present
  with_items: docker_users
  when: docker_users is defined

- name: Create oss-network
  docker_network:
    name: oss-network
  when: create_oss_network
